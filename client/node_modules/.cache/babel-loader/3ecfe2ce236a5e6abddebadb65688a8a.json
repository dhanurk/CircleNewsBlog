{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/BrProject/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./PrivateRoute.jsx\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./Reducers/index.js\";\nimport * as authActions from \"./Actions/authActions.js\"; // LOADING COMPONENTS\n\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\nimport Blogs from \"./Components/Blogs\";\nimport CreateBlog from \"./Components/CreateBlog\";\nimport Comments from \"./Components/Comments\"; //SETTING UP THE STORE\n\nconst initialState = {}; // const middleware = [thunk];\n\nconst stores = createStore(rootReducer, applyMiddleware(thunk));\n\nif (localStorage.jwtToken) {\n  let Object = localStorage.getItem(\"jwtToken\");\n  Object = JSON.parse(Object); // console.log(Object);\n\n  const obj = {\n    email: Object.email,\n    password: Object.password\n  };\n  stores.dispatch(authActions.loginUser(obj));\n}\n\nclass App extends Component {\n  // componentDidMount() {\n  //   if (localStorage.jwtToken) {\n  //     let Object = localStorage.getItem(\"jwtToken\");\n  //     Object = JSON.parse(Object);\n  //     // console.log(Object);\n  //     const obj = {\n  //       email: Object.email,\n  //       password: Object.password\n  //     };\n  //     stores.dispatch(loginUser(obj));\n  //   }\n  // }\n  render() {\n    return React.createElement(Provider, {\n      store: stores,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      component: Navbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: Signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/blogs\",\n      component: Blogs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/blogs/:id\",\n      component: Comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/createBlog\",\n      component: CreateBlog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/root/Desktop/BrProject/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Provider","PrivateRoute","thunk","createStore","applyMiddleware","compose","rootReducer","authActions","Navbar","Login","Signup","Blogs","CreateBlog","Comments","initialState","stores","localStorage","jwtToken","Object","getItem","JSON","parse","obj","email","password","dispatch","loginUser","App","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./PrivateRoute.jsx\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./Reducers/index.js\";\nimport * as authActions from \"./Actions/authActions.js\";\n\n// LOADING COMPONENTS\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\nimport Blogs from \"./Components/Blogs\";\nimport CreateBlog from \"./Components/CreateBlog\";\nimport Comments from \"./Components/Comments\";\n\n//SETTING UP THE STORE\nconst initialState = {};\n// const middleware = [thunk];\nconst stores = createStore(rootReducer, applyMiddleware(thunk));\n\nif (localStorage.jwtToken) {\n  let Object = localStorage.getItem(\"jwtToken\");\n  Object = JSON.parse(Object);\n  // console.log(Object);\n\n  const obj = {\n    email: Object.email,\n    password: Object.password\n  };\n\n  stores.dispatch(authActions.loginUser(obj));\n}\n\nclass App extends Component {\n  // componentDidMount() {\n  //   if (localStorage.jwtToken) {\n  //     let Object = localStorage.getItem(\"jwtToken\");\n  //     Object = JSON.parse(Object);\n  //     // console.log(Object);\n\n  //     const obj = {\n  //       email: Object.email,\n  //       password: Object.password\n  //     };\n\n  //     stores.dispatch(loginUser(obj));\n  //   }\n  // }\n  render() {\n    return (\n      <Provider store={stores}>\n        <Router>\n          <div>\n            <Route path=\"/\" component={Navbar} />\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/blogs\" component={Blogs}></Route>\n            <Route exact path=\"/blogs/:id\" component={Comments}></Route>\n            <Switch>\n              <Route path=\"/createBlog\" component={CreateBlog}></Route>\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}