{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/BrProject/client/src/Components/Blogs.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllBlogs, addComment } from \"../Actions/blogActions\";\nimport { loginUser } from \"../Actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nclass Blogs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      blogs: null,\n      comment: \"\",\n      error: \"\"\n    };\n\n    this.NotAuth = i => {\n      if (this.state.blogs == null) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"LOADING...\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.jwtToken) {\n      let Object = localStorage.getItem(\"jwtToken\");\n      Object = JSON.parse(Object); // console.log(Object);\n\n      const obj = {\n        email: Object.email,\n        password: Object.password\n      };\n      this.props.loginUser(obj);\n    }\n\n    this.props.getAllBlogs();\n  }\n\n  componentWillReceiveProps(next) {\n    this.setState({\n      blogs: next.blog.blogs\n    });\n  }\n\n  render() {\n    let blogs = this.props.blog.blogs;\n    const blogStyle = {\n      padding: \"10px\",\n      border: \"5px solid #d9534f\",\n      margin: \"0\",\n      backgroundColor: \"white\"\n    };\n    const textarea = {\n      backgroundColor: \"#d9d6d2\",\n      fontSize: \"20px\"\n    };\n    const color = {\n      color: \"red\"\n    };\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"All Blogs\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.NotAuth(), this.props.auth.isAuthenticated ? this.props.blog.blogs.map(blog => {\n      // console.log(blog);\n      return React.createElement(\"div\", {\n        key: blog._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: blogStyle,\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require(\"./i.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, blog.blogContent, \" \"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        style: textarea,\n        placeholder: \"Add a Comment\",\n        value: this.state.comment,\n        onChange: e => {\n          this.setState({\n            comment: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), \" \", this.state.error != \"\" ? React.createElement(\"div\", {\n        class: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.error), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })) : \"\", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => {\n          if (this.state.comment === null || this.state.comment === \"\") {\n            this.setState({\n              error: \"Please write something\"\n            });\n          } else {\n            const obj = {\n              text: this.state.comment\n            };\n            this.props.addComment(obj, blog._id);\n            this.setState({\n              comment: \"\"\n            });\n          }\n        },\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Comment\")), React.createElement(Link, {\n        to: \"/blogs/\".concat(blog._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"View All Comments\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }) : this.props.blog.blogs.map(blog => {\n      // console.log(blog);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: blogStyle,\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require(\"./i.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \" \", blog.user.name))), React.createElement(\"div\", {\n        className: \"col-md-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, blog.blogContent, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/blogs/\".concat(blog._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"View All Comments\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nconst mapStatetoProps = state => ({\n  auth: state.auth,\n  blog: state.blog,\n  errors: state.errors\n});\n\nexport default connect(mapStatetoProps, {\n  getAllBlogs,\n  loginUser,\n  addComment\n})(Blogs);","map":{"version":3,"sources":["/root/Desktop/BrProject/client/src/Components/Blogs.js"],"names":["React","Component","connect","getAllBlogs","addComment","loginUser","Link","Blogs","state","blogs","comment","error","NotAuth","i","componentDidMount","localStorage","jwtToken","Object","getItem","JSON","parse","obj","email","password","props","componentWillReceiveProps","next","setState","blog","render","blogStyle","padding","border","margin","backgroundColor","textarea","fontSize","color","auth","isAuthenticated","map","_id","require","blogContent","e","target","value","text","user","name","mapStatetoProps","errors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getAllBlogs, addComment } from \"../Actions/blogActions\";\nimport { loginUser } from \"../Actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nclass Blogs extends Component {\n  state = {\n    blogs: null,\n    comment: \"\",\n    error: \"\"\n  };\n\n  componentDidMount() {\n    if (localStorage.jwtToken) {\n      let Object = localStorage.getItem(\"jwtToken\");\n      Object = JSON.parse(Object);\n      // console.log(Object);\n\n      const obj = {\n        email: Object.email,\n        password: Object.password\n      };\n\n      this.props.loginUser(obj);\n    }\n    this.props.getAllBlogs();\n  }\n  componentWillReceiveProps(next) {\n    this.setState({ blogs: next.blog.blogs });\n  }\n\n  NotAuth = i => {\n    if (this.state.blogs == null) {\n      return <div>LOADING...</div>;\n    }\n  };\n  render() {\n    let { blogs } = this.props.blog;\n\n    const blogStyle = {\n      padding: \"10px\",\n      border: \"5px solid #d9534f\",\n      margin: \"0\",\n      backgroundColor: \"white\"\n    };\n\n    const textarea = {\n      backgroundColor: \"#d9d6d2\",\n      fontSize: \"20px\"\n    };\n\n    const color = {\n      color: \"red\"\n    };\n\n    return (\n      <div className=\"container\">\n        <h1>All Blogs</h1>\n        <br />\n        {this.NotAuth()}\n        {this.props.auth.isAuthenticated\n          ? this.props.blog.blogs.map(blog => {\n              // console.log(blog);\n\n              return (\n                <div key={blog._id}>\n                  <div style={blogStyle} className=\"row\">\n                    <div className=\"col-md-3\">\n                      <img src={require(\"./i.png\")}></img>\n                      <br />\n                      <br />\n\n                      <h4>{/* <b> {blog.user.name}</b> */}</h4>\n                    </div>\n                    <div className=\"col-md-9\">{blog.blogContent} </div>\n                    <textarea\n                      className=\"form-control\"\n                      style={textarea}\n                      placeholder=\"Add a Comment\"\n                      value={this.state.comment}\n                      onChange={e => {\n                        this.setState({ comment: e.target.value });\n                      }}\n                    ></textarea>\n                    <br />{\" \"}\n                    {this.state.error != \"\" ? (\n                      <div class=\"alert alert-danger\">\n                        <strong>{this.state.error}</strong>\n                        <br />\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                    <div>\n                      <button\n                        onClick={() => {\n                          if (\n                            this.state.comment === null ||\n                            this.state.comment === \"\"\n                          ) {\n                            this.setState({\n                              error: \"Please write something\"\n                            });\n                          } else {\n                            const obj = {\n                              text: this.state.comment\n                            };\n                            this.props.addComment(obj, blog._id);\n                            this.setState({\n                              comment: \"\"\n                            });\n                          }\n                        }}\n                        className=\"btn btn-danger\"\n                      >\n                        Comment\n                      </button>\n                    </div>\n                    <Link to={`/blogs/${blog._id}`}>\n                      <button className=\"btn\">\n                        <span style={color}>View All Comments</span>\n                      </button>\n                    </Link>\n                  </div>\n                  <br />\n                  <br />\n                </div>\n              );\n            })\n          : this.props.blog.blogs.map(blog => {\n              // console.log(blog);\n\n              return (\n                <div>\n                  <div style={blogStyle} className=\"row\">\n                    <div className=\"col-md-3\">\n                      <img src={require(\"./i.png\")}></img>\n                      <br />\n                      <br />\n\n                      <h4>\n                        <b> {blog.user.name}</b>\n                      </h4>\n                    </div>\n                    <div className=\"col-md-9\">{blog.blogContent} </div>\n\n                    <br />\n                    <Link to={`/blogs/${blog._id}`}>\n                      <button className=\"btn\">\n                        <span style={color}>View All Comments</span>\n                      </button>\n                    </Link>\n                  </div>\n                  <br />\n                  <br />\n                </div>\n              );\n            })}\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  auth: state.auth,\n  blog: state.blog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStatetoProps,\n  { getAllBlogs, loginUser, addComment }\n)(Blogs);\n"]},"metadata":{},"sourceType":"module"}