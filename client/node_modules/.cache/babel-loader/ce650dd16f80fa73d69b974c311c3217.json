{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/BrProject/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./PrivateRoute.jsx\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./Reducers/index.js\"; // LOADING COMPONENTS\n\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\"; //SETTING UP THE STORE\n\nconst initialState = {};\nconst middleware = [thunk];\nconst stores = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())); //LOGGING USER AUTOMATICALLY\n\nif (localStorage.jwtToken) {\n  //   setAuthToken(localStorage.jwtToken);\n  let Object = localStorage.getItem(\"jwtToken\");\n  Object = JSON.parse(Object);\n  stores.dispatch(setCurrentUser(Object));\n}\n\nclass App extends Component {\n  render() {\n    return React.createElement(Provider, {\n      store: stores,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      component: Navbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/root/Desktop/BrProject/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Provider","PrivateRoute","thunk","createStore","applyMiddleware","compose","rootReducer","Navbar","Login","initialState","middleware","stores","window","__REDUX_DEVTOOLS_EXTENSION__","localStorage","jwtToken","Object","getItem","JSON","parse","dispatch","setCurrentUser","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,qBAAxB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CAEA;;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACR,KAAD,CAAnB;AACA,MAAMS,MAAM,GAAGR,WAAW,CACxBG,WADwB,EAExBG,YAFwB,EAGxBJ,OAAO,CACLD,eAAe,CAAC,GAAGM,UAAJ,CADV,EAELE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFlC,CAHiB,CAA1B,C,CASA;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACA,MAAIC,MAAM,GAAGF,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAb;AACAD,EAAAA,MAAM,GAAGE,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAT;AAEAL,EAAAA,MAAM,CAACS,QAAP,CAAgBC,cAAc,CAACL,MAAD,CAA9B;AACD;;AAED,MAAMM,GAAN,SAAkB3B,SAAlB,CAA4B;AAC1B4B,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEZ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEJ,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CADF,CADF;AAWD;;AAbyB;;AAgB5B,eAAec,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./PrivateRoute.jsx\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./Reducers/index.js\";\n\n// LOADING COMPONENTS\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\";\n\n//SETTING UP THE STORE\nconst initialState = {};\nconst middleware = [thunk];\nconst stores = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\n//LOGGING USER AUTOMATICALLY\nif (localStorage.jwtToken) {\n  //   setAuthToken(localStorage.jwtToken);\n  let Object = localStorage.getItem(\"jwtToken\");\n  Object = JSON.parse(Object);\n\n  stores.dispatch(setCurrentUser(Object));\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={stores}>\n        <Router>\n          <div>\n            <Route path=\"/\" component={Navbar} />\n            <Route exact path=\"/\" component={Login} />\n            <Switch></Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}