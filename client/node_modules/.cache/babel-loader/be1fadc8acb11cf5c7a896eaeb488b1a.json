{"ast":null,"code":"import _objectWithoutProperties from \"/root/Desktop/BrProject/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/root/Desktop/BrProject/client/src/PrivateRoute.jsx\";\nimport React from \"react\"; // import PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      auth = _ref.auth,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"auth\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => auth.isAuthenticated === true ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }));\n}; // PrivateRoute.propTypes = {\n//     auth: PropTypes.object.isRequired,\n//     errors: PropTypes.object.isRequired\n// };\n\n\nconst mapStatetoProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStatetoProps)(PrivateRoute);","map":{"version":3,"sources":["/root/Desktop/BrProject/client/src/PrivateRoute.jsx"],"names":["React","connect","Route","Redirect","PrivateRoute","Component","component","auth","rest","props","isAuthenticated","mapStatetoProps","state","errors"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,UAA6C;AAAA,MAA/BC,SAA+B,QAA1CC,SAA0C;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAXC,IAAW;;AAChE,SACE,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,MAAM,EAAEC,KAAK,IACXF,IAAI,CAACG,eAAL,KAAyB,IAAzB,GACE,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,GAGE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAbD,C,CAeA;AACA;AACA;AACA;;;AAEA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCL,EAAAA,IAAI,EAAEK,KAAK,CAACL,IADoB;AAEhCM,EAAAA,MAAM,EAAED,KAAK,CAACC;AAFkB,CAAL,CAA7B;;AAKA,eAAeZ,OAAO,CAACU,eAAD,CAAP,CAAyBP,YAAzB,CAAf","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        auth.isAuthenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\n// PrivateRoute.propTypes = {\n//     auth: PropTypes.object.isRequired,\n//     errors: PropTypes.object.isRequired\n// };\n\nconst mapStatetoProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStatetoProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}