{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/BrProject/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./PrivateRoute.jsx\";\nimport thunk from \"redux-thunk\";\nimport { connect } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./Reducers/index.js\";\nimport { setCurrentUser } from \"./Actions/authActions\"; // LOADING COMPONENTS\n\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\";\nimport Blogs from \"./Components/Blogs\";\nimport CreateBlog from \"./Components/CreateBlog\"; //SETTING UP THE STORE\n\nconst initialState = {};\nconst middleware = [thunk];\nconst stores = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())); //LOGGING USER AUTOMATICALLY\n\nif (localStorage.jwtToken) {\n  let Object = localStorage.getItem(\"jwtToken\");\n  Object = JSON.parse(Object);\n  this.props.setCurrentUser(Object); // stores.dispatch(setCurrentUser(Object));\n}\n\nclass App extends Component {\n  componentDidMount() {}\n\n  render(props) {\n    return React.createElement(Provider, {\n      store: stores,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      component: Navbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/blogs\",\n      component: Blogs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(PrivateRoute, {\n      path: \"/createBlog\",\n      component: CreateBlog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })))));\n  }\n\n} // const mapStatetoProps = state => {\n//   auth: state.auth;\n// };\n\n\nconst mapDispatchToProps = {\n  setCurrentUser\n};\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/root/Desktop/BrProject/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Provider","PrivateRoute","thunk","connect","createStore","applyMiddleware","compose","rootReducer","setCurrentUser","Navbar","Login","Blogs","CreateBlog","initialState","middleware","stores","window","__REDUX_DEVTOOLS_EXTENSION__","localStorage","jwtToken","Object","getItem","JSON","parse","props","App","componentDidMount","render","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CACA;;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACZ,KAAD,CAAnB;AACA,MAAMa,MAAM,GAAGX,WAAW,CACxBG,WADwB,EAExBM,YAFwB,EAGxBP,OAAO,CACLD,eAAe,CAAC,GAAGS,UAAJ,CADV,EAELE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFlC,CAHiB,CAA1B,C,CASA;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB,MAAIC,MAAM,GAAGF,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAb;AACAD,EAAAA,MAAM,GAAGE,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAT;AAEA,OAAKI,KAAL,CAAWhB,cAAX,CAA0BY,MAA1B,EAJyB,CAMzB;AACD;;AAED,MAAMK,GAAN,SAAkB9B,SAAlB,CAA4B;AAC1B+B,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,CAACH,KAAD,EAAQ;AACZ,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAET,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,SAAS,EAAEN,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,SAAS,EAAEC,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF,CADF,CADF;AAiBD;;AArByB,C,CAwB5B;AACA;AACA;;;AACA,MAAMgB,kBAAkB,GAAG;AACzBpB,EAAAA;AADyB,CAA3B;AAIA,eAAeL,OAAO,CACpB,IADoB,EAEpByB,kBAFoB,CAAP,CAGbH,GAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./PrivateRoute.jsx\";\nimport thunk from \"redux-thunk\";\nimport { connect } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./Reducers/index.js\";\nimport { setCurrentUser } from \"./Actions/authActions\";\n\n// LOADING COMPONENTS\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\";\nimport Blogs from \"./Components/Blogs\";\nimport CreateBlog from \"./Components/CreateBlog\";\n//SETTING UP THE STORE\nconst initialState = {};\nconst middleware = [thunk];\nconst stores = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\n//LOGGING USER AUTOMATICALLY\nif (localStorage.jwtToken) {\n  let Object = localStorage.getItem(\"jwtToken\");\n  Object = JSON.parse(Object);\n\n  this.props.setCurrentUser(Object);\n\n  // stores.dispatch(setCurrentUser(Object));\n}\n\nclass App extends Component {\n  componentDidMount() {}\n\n  render(props) {\n    return (\n      <Provider store={stores}>\n        <Router>\n          <div>\n            <Route path=\"/\" component={Navbar} />\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/blogs\" component={Blogs}></Route>\n            <Switch>\n              <PrivateRoute\n                path=\"/createBlog\"\n                component={CreateBlog}\n              ></PrivateRoute>\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\n// const mapStatetoProps = state => {\n//   auth: state.auth;\n// };\nconst mapDispatchToProps = {\n  setCurrentUser\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}