{"ast":null,"code":"var _jsxFileName = \"/root/Desktop/BrProject/client/src/Components/Comments.js\";\nimport React, { Component } from \"react\";\nimport { getComments } from \"../Actions/blogActions\";\nimport { loginUser } from \"../Actions/authActions\";\nimport { connect } from \"react-redux\";\n\nclass Comments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: null\n    };\n  }\n\n  componentWillReceiveProps(next) {\n    this.setState({\n      comments: next.blog.comments\n    });\n  }\n\n  componentDidMount() {\n    if (localStorage.jwtToken) {\n      let Object = localStorage.getItem(\"jwtToken\");\n      Object = JSON.parse(Object); // console.log(Object);\n\n      const obj = {\n        email: Object.email,\n        password: Object.password\n      };\n      this.props.loginUser(obj);\n    } // console.log(this.props.match.params.id);\n\n\n    this.props.getComments(this.props.match.params.id);\n  }\n\n  render() {\n    const comments = this.props.blog.comments;\n    const comment = {\n      padding: \"10px\",\n      border: \"5px solid #d9534f\",\n      margin: \"0\",\n      backgroundColor: \"white\"\n    };\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, comments.map(comment => {\n      return React.createElement(\"div\", {\n        style: comment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, comment.text, React.createElement(\"div\", {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Comment by - \"), React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Madhav Khurana\")));\n    }));\n  }\n\n}\n\nconst mapStatetoProps = state => ({\n  auth: state.auth,\n  blog: state.blog,\n  errors: state.errors\n});\n\nexport default connect(mapStatetoProps, {\n  loginUser,\n  getComments\n})(Comments);","map":{"version":3,"sources":["/root/Desktop/BrProject/client/src/Components/Comments.js"],"names":["React","Component","getComments","loginUser","connect","Comments","state","comments","componentWillReceiveProps","next","setState","blog","componentDidMount","localStorage","jwtToken","Object","getItem","JSON","parse","obj","email","password","props","match","params","id","render","comment","padding","border","margin","backgroundColor","map","text","mapStatetoProps","auth","errors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BK,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADuB;AAAA;;AAK/BC,EAAAA,yBAAyB,CAACC,IAAD,EAAO;AAC9B,SAAKC,QAAL,CAAc;AAAEH,MAAAA,QAAQ,EAAEE,IAAI,CAACE,IAAL,CAAUJ;AAAtB,KAAd;AACD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB,UAAIC,MAAM,GAAGF,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAb;AACAD,MAAAA,MAAM,GAAGE,IAAI,CAACC,KAAL,CAAWH,MAAX,CAAT,CAFyB,CAGzB;;AAEA,YAAMI,GAAG,GAAG;AACVC,QAAAA,KAAK,EAAEL,MAAM,CAACK,KADJ;AAEVC,QAAAA,QAAQ,EAAEN,MAAM,CAACM;AAFP,OAAZ;AAKA,WAAKC,KAAL,CAAWnB,SAAX,CAAqBgB,GAArB;AACD,KAZiB,CAalB;;;AAEA,SAAKG,KAAL,CAAWpB,WAAX,CAAuB,KAAKoB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCnB,QADD,GACc,KAAKe,KAAL,CAAWX,IADzB,CACCJ,QADD;AAEP,UAAMoB,OAAO,GAAG;AACdC,MAAAA,OAAO,EAAE,MADK;AAEdC,MAAAA,MAAM,EAAE,mBAFM;AAGdC,MAAAA,MAAM,EAAE,GAHM;AAIdC,MAAAA,eAAe,EAAE;AAJH,KAAhB;AAOA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxB,QAAQ,CAACyB,GAAT,CAAaL,OAAO,IAAI;AACvB,aACE;AAAK,QAAA,KAAK,EAAEA,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OAAO,CAACM,IADX,EAEE;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CAFF,CADF;AASD,KAVA,CADH,CADF;AAeD;;AAnD8B;;AAsDjC,MAAMC,eAAe,GAAG5B,KAAK,KAAK;AAChC6B,EAAAA,IAAI,EAAE7B,KAAK,CAAC6B,IADoB;AAEhCxB,EAAAA,IAAI,EAAEL,KAAK,CAACK,IAFoB;AAGhCyB,EAAAA,MAAM,EAAE9B,KAAK,CAAC8B;AAHkB,CAAL,CAA7B;;AAMA,eAAehC,OAAO,CACpB8B,eADoB,EAEpB;AAAE/B,EAAAA,SAAF;AAAaD,EAAAA;AAAb,CAFoB,CAAP,CAGbG,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { getComments } from \"../Actions/blogActions\";\nimport { loginUser } from \"../Actions/authActions\";\nimport { connect } from \"react-redux\";\n\nclass Comments extends Component {\n  state = {\n    comments: null\n  };\n\n  componentWillReceiveProps(next) {\n    this.setState({ comments: next.blog.comments });\n  }\n\n  componentDidMount() {\n    if (localStorage.jwtToken) {\n      let Object = localStorage.getItem(\"jwtToken\");\n      Object = JSON.parse(Object);\n      // console.log(Object);\n\n      const obj = {\n        email: Object.email,\n        password: Object.password\n      };\n\n      this.props.loginUser(obj);\n    }\n    // console.log(this.props.match.params.id);\n\n    this.props.getComments(this.props.match.params.id);\n  }\n\n  render() {\n    const { comments } = this.props.blog;\n    const comment = {\n      padding: \"10px\",\n      border: \"5px solid #d9534f\",\n      margin: \"0\",\n      backgroundColor: \"white\"\n    };\n\n    return (\n      <div className=\"container\">\n        {comments.map(comment => {\n          return (\n            <div style={comment}>\n              {comment.text}\n              <div align=\"right\">\n                <i>Comment by - </i>\n                <b>Madhav Khurana</b>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStatetoProps = state => ({\n  auth: state.auth,\n  blog: state.blog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStatetoProps,\n  { loginUser, getComments }\n)(Comments);\n"]},"metadata":{},"sourceType":"module"}